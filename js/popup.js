// Generated by CoffeeScript 1.7.1
(function() {
  var append, changeButtons, deleteHostname, getList, isInLearningPhase, load, saveHostnames, startPhase, stopPhase;

  isInLearningPhase = false;

  load = function() {
    return chrome.storage.local.get(['hostnames'], function(loaded) {
      var hostname, _i, _len, _ref, _results;
      console.log('loaded', loaded);
      _ref = loaded.hostnames;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        hostname = _ref[_i];
        _results.push(append(hostname));
      }
      return _results;
    });
  };

  saveHostnames = function() {
    var list;
    list = getList();
    chrome.runtime.sendMessage({
      hostnames: list,
      type: 'hostnames'
    });
    return chrome.storage.local.set({
      hostnames: list
    }, function() {
      return console.log('saved to local storage: ', list);
    });
  };

  deleteHostname = function() {
    return $(this).closest('.hostNameWrapper').fadeOut(function() {
      $(this).remove();
      return saveHostnames();
    });
  };

  append = function(val) {
    var cloned;
    cloned = $('#inputTemplate').clone().removeAttr('id').appendTo('#hostnameInput');
    console.log(arguments[0]);
    if (val) {
      cloned.find('input').val(val);
    }
    return cloned.fadeIn();
  };

  getList = function() {
    var hosts;
    hosts = [];
    $('#hostnames input').each(function() {
      var host;
      host = $(this).val();
      if ((host != null) && host.length > 0) {
        return hosts.push(host);
      }
    });
    return hosts;
  };

  startPhase = function() {
    chrome.runtime.sendMessage({
      type: 'startLearning'
    });
    isInLearningPhase = true;
    changeButtons();
    return saveHostnames();
  };

  stopPhase = function() {
    chrome.runtime.sendMessage({
      type: 'stopLearning'
    });
    isInLearningPhase = false;
    return changeButtons();
  };

  changeButtons = function() {
    if (isInLearningPhase) {
      $('#startPhase').hide();
      return $('#stopPhase').show();
    } else {
      $('#startPhase').show();
      return $('#stopPhase').hide();
    }
  };

  $(function() {
    chrome.runtime.onMessage.addListener(function(request) {
      console.log(request);
      if (request.type === 'openPopupResponse') {
        isInLearningPhase = request.isInLearningPhase;
        return changeButtons();
      }
    });
    chrome.runtime.sendMessage({
      type: 'openPopup'
    });
    load();
    $(window).on('beforeunload', function() {
      return saveHostnames();
    });
    $('#startPhase').click(startPhase);
    $('#stopPhase').click(stopPhase);
    $('#hostnames').submit(function(e) {
      return e.preventDefault();
    });
    $('#hostnames button[type=submit]').click(saveHostnames);
    $('#hostnames').on('click', '.hostnameRemover', deleteHostname);
    $('#hostnames').on('click', '.hostnameRemover span', deleteHostname);
    return $('#addHostname').click(function() {
      return append();
    });
  });

}).call(this);

//# sourceMappingURL=popup.map
